import React from 'react';
import { AppContext } from '../context/AppContext';

const EFormDownload = ({ appointment, onDownload }) => {
  const { calculateAge } = React.useContext(AppContext);

  const generateEFormHTML = () => {
    const eForm = appointment.eForm;
    if (!eForm) return null;

    return `
      <!DOCTYPE html>
      <html>
      <head>
        <title>Medical Prescription - ${appointment.userData.name}</title>
        <style>
          body { font-family: Arial, sans-serif; margin: 20px; }
          .header { display: flex; justify-content: space-between; align-items: center; border-bottom: 2px solid #333; padding-bottom: 10px; margin-bottom: 20px; }
          .clinic-info h1 { margin: 0; color: #0b4c6b; }
          .clinic-info p { margin: 2px 0; color: #666; font-size: 12px; }
          .patient-info { background: #f9f9f9; padding: 15px; margin: 15px 0; border-radius: 5px; }
          .section { margin: 15px 0; }
          .section h3 { color: #333; border-bottom: 1px solid #ddd; padding-bottom: 5px; }
          .vitals { display: flex; gap: 20px; margin: 10px 0; }
          .vitals div { flex: 1; }
          table { width: 100%; border-collapse: collapse; margin: 10px 0; }
          th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
          th { background: #f5f5f5; }
          .footer { margin-top: 30px; border-top: 1px solid #ddd; padding-top: 15px; }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="clinic-info">
            <h1>Dr. ${appointment.docData.name} - ${appointment.docData.speciality}</h1>
            <p>${appointment.docData.address.line1}, ${appointment.docData.address.line2}</p>
            <p>Email: ${appointment.docData.email}</p>
          </div>
          <div>
            <p><strong>Date:</strong> ${new Date().toLocaleDateString()}</p>
            <p><strong>Prescription ID:</strong> PR-${appointment._id.slice(0, 6)}</p>
          </div>
        </div>

        <div class="patient-info">
          <h3>Patient Information</h3>
          <p><strong>Name:</strong> ${eForm.patientName || appointment.userData.name}</p>
          <p><strong>Age:</strong> ${eForm.patientAge || 'N/A'}</p>
          <p><strong>Gender:</strong> ${eForm.patientGender || appointment.userData.gender}</p>
          <p><strong>Contact:</strong> ${eForm.patientContact || appointment.userData.phone}</p>
          <p><strong>Address:</strong> ${eForm.patientAddress || ''}</p>
        </div>

        <div class="section">
          <h3>Chief Complaint</h3>
          <p>${eForm.chiefComplaint || 'N/A'}</p>
        </div>

        <div class="section">
          <h3>Clinical Notes</h3>
          <p>${eForm.clinicalNotes || 'N/A'}</p>
        </div>

        <div class="section">
          <h3>Vital Signs</h3>
          <div class="vitals">
            <div><strong>BP:</strong> ${eForm.bloodPressure || 'N/A'}</div>
            <div><strong>Pulse:</strong> ${eForm.pulse || 'N/A'}</div>
            <div><strong>Temperature:</strong> ${eForm.temperature || 'N/A'}</div>
            <div><strong>Weight:</strong> ${eForm.weight || 'N/A'}</div>
          </div>
        </div>

        <div class="section">
          <h3>Prescription</h3>
          <table>
            <thead>
              <tr>
                <th>Medicine</th>
                <th>Form/Strength</th>
                <th>Dosage</th>
                <th>Frequency</th>
                <th>Duration</th>
                <th>Notes</th>
              </tr>
            </thead>
            <tbody>
              ${eForm.prescriptions ? eForm.prescriptions.map(p => `
                <tr>
                  <td>${p.medicine || ''}</td>
                  <td>${p.form || ''}</td>
                  <td>${p.dosage || ''}</td>
                  <td>${p.frequency || ''}</td>
                  <td>${p.duration || ''}</td>
                  <td>${p.notes || ''}</td>
                </tr>
              `).join('') : '<tr><td colspan="6">No prescriptions</td></tr>'}
            </tbody>
          </table>
        </div>

        <div class="section">
          <h3>Tests Ordered</h3>
          <p>${eForm.tests || 'N/A'}</p>
        </div>

        <div class="section">
          <h3>Diagnosis</h3>
          <p>${eForm.diagnosis || 'N/A'}</p>
        </div>

        <div class="section">
          <h3>Advice</h3>
          <p>${eForm.advice || 'N/A'}</p>
        </div>

        <div class="footer">
          <p><strong>Doctor:</strong> Dr. ${appointment.docData.name}</p>
          <p><strong>Speciality:</strong> ${appointment.docData.speciality}</p>
          <p style="margin-top: 20px; font-size: 12px; color: #666;">Generated by i-Consult</p>
        </div>
      </body>
      </html>
    `;
  };

  const downloadEForm = () => {
    const htmlContent = generateEFormHTML();
    if (!htmlContent) {
      alert('No eForm data available for this appointment');
      return;
    }

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `eForm_${appointment.userData.name}_${appointment._id.slice(0, 6)}.html`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <button 
      onClick={downloadEForm}
      className='text-[#696969] sm:min-w-48 py-2 border rounded hover:bg-blue-600 hover:text-white transition-all duration-300'
      disabled={!appointment.eForm}
    >
      {appointment.eForm ? 'Download eForm' : 'No eForm Available'}
    </button>
  );
};

export default EFormDownload;